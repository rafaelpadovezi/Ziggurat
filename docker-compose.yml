services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server
    environment:
      SA_PASSWORD: Password1
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "Password1" -C -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 10

  rabbit:
    image: "rabbitmq:3-management"
    hostname: "rabbit"
    ports:
      - "15672:15672"
      - "5672:5672"

  mongo:
    image: mongo:7
    ports:
      - "27017:27017"
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 10
    entrypoint:
      [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "myReplicaSet" ]

  mongoclustersetup:
    image: mongo:7
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./scripts/mongo-init-replica-set.sh:/app/mongo-init-replica-set.sh
    command:
      - bash
      - -c
      - ./app/mongo-init-replica-set.sh
    
  tests:
    working_dir: "/app"
    image: "mcr.microsoft.com/dotnet/sdk:8.0"
    command: "./scripts/start-tests.sh"
    volumes:
      - .:/app
    environment:
        - ConnectionStrings__SqlServer=Server=sqlserver;Database=TestDb;User=sa;Password=Password1;TrustServerCertificate=True
        - ConnectionStrings__MongoDb=mongodb://mongo:27017?directConnection=true
    depends_on:
      sqlserver:
        condition: service_healthy
      mongoclustersetup:
        condition: service_completed_successfully

networks:
  mongoCluster:
    driver: bridge